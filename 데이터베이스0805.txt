조인 문을 생성하는 과정
[step 1] 지문에서 검색 대상과 조건을 구분한다.
   --이를 통해 일단 SELECT 절, WHERE 절, ORDER BY 절을 구성한다.
   --SELECT 절은 [step 5]에서 작성자의 의도에 따라 추가 될 수 있다.
[step 2] SELECT 절과 WHERE 절의 내용에 따라 정보를 검색할 테이블을 찾는다.
[step 3] 테이블간의 관계를 확인한다.
  -관계를 확인하는 단계에서 테이블이 추가될 수 있다.
[step 4]조인 조건을 기술한다.
[step 5]전체 문장을 다듬는다.

위에 제시한 단계별로 지문으로부터 SQL문을 만들어 보자.

*화학과 학생의 일반화학 기말고사 점수를 검색하시오.
[step 1] 지문에서 검색 대상과 조건을 찾는다.
 지문에서 검색 컬럼과 조건을 찾는다.
 -검색 대상                                     
   기말 고사 점수: result                           SELECT result
 -조건 					FROM
   화학과 학생: major='화학'			WHERE major='화학' AND
   일반화학 과목: cname='일반화학'			cname ='일반화학'
   
----------------------------------------------------------------------------------------------
[step 2]SELECT 절과 WHERE 절의 내용에 따라 정보를 검색할 테이블을 찾는다.
   SELECT 절과 WHERE 절에 사용된
  컬럼이 포함된 테이블을 기술한다.             SELECT result
   *result : score 테이블			FROM student,course,score
   *major : student 테이블			WHERE major='화학' AND
   *cname : course 테이블			cname='일반화학'
----------------------------------------------------------------------------------------------------   
[step 3] 테이블간의 관계를 확인한다.
 student,course,score 테이블의 관계가 
끊어지지 않도록 관계를 확인한다.                         		SELECT result
 student--(sno)--score--(cno)--course				FROM student, course,score
*테이블간의 관계가 끊어지는 경우 중간에			WHERE 	major='화학' AND
 새로운 테이블을 삽입해서 관계가 끊어지지 않도록			cname='일반화학'
조치한다.
----------------------------------------------------------------------------------------------------
[step 4] 조인 조건을 기술한다.
					SELECT result
FROM 절에 쓰인 테이블간에 			FROM student,course,score
조인 조건을 기술한다.			WHERE student.sno=score.sno AND 
						score.cno=score.cno
						AND major='화학'
						AND canme='일반화학'
------------------------------------------------------------------------------------------------------
[step 5]전체 문장을 다듬는다.

[step 4]까지 조인 문장이 완성		SELECT major,cname,sno,sname,result
되었으나 ,SELECT문을 읽을때			FROM student,course,score
해석을 돕기위해 새로운 컬럼을 		WHERE student.sno=score.sno AND
SELECT 절에 추가하거나, 별명을 			course.cno=score.cno
지정하거나 등의 부가적인 요소들을		AND major='화학' AND cname='일반화학';
점검한다. 추가된 내용으로 만들어진 
SELECT 문의 논리적인 구성에 
영향을 끼치지 않아야 한다.

---------------------------------------------------------------------------------------------------------------------
*4학년 학생이 수강하는 과목을 강의하는 교수의 명단을 검색하시오.

교수의 명단 pname

4학년 학생 syear='4'

수강하는 과목 cname

SELECT distinct cname, pname FROM student s,professor p,course c,score r WHERE s.sno=r.sno AND p.pno=c.pno
    AND c.cno=r.cno AND syear=4 ;

과목기준으로 교수명은 겹칠수 있음. cname 대신 pno를 넣으면 중복없는 교수명 출려가능

---------------------------------------------------------------------------------------------------------------------
*4학년 학생이 수강하는 과목을 강의하는 교수의 명단을 검색하시오.
[step1] 지문에서 검색 대상과 조건을 찾는다.

*검색대상
     -교수명단:pname			SELECT pno,pname
*조건					FROM
     -4학년 학생:syear=4;			WHERE syear= 4;

------------------------------------------------------------------------------
[step2] SELECT 절과 WHERE 절의 내용에 따라 정보를 검색할 테이블 찾기
   *pname : professor			SELECT pno,pname
   *syear : student				FROM professor,student
   					WHERE syear = 4;
-------------------------------------------------------------------------------
[step3] 테이블간의 관계를 확인한다.
    student---???---professor
student와 professor 테이블 둘의 사이에	SELECT pno,pname
직접적인 관계가 없다.			FROM student,professor,score,course
student -- (sno)--score--(cno)--course--	WHERE syear=4;
(pno) --professor
student와 professor의 관계를 위해서
score와 course테이블이 필요하다.
----------------------------------------------------------------------------------
[step4]조인 조건을 기술한다.
					SELECT pno,pname
4개 테이블간의 조인 조건을 기술한다.		FROM student,professor,score,course
					WHERE student.sno=score.sno 
					AND score.cno=course.cno
					AND course.pno=professor.pno
					AND syear=4;

-------------------------------------------------------------------------------------
[step5]전체문장을 다듬는다.


SELECT distinct c.cname 과목명, pname "교수 명단"
FROM student st, professor p, score s, course c
WHERE st.sno=s.sno 
AND s.cno=c.cno
AND c.pno=p.pno
AND syear=4;

별명사용하여 줄일수 있다.

-----------------------------------------------------------------------------------------------
1)직원과 사수의 명단을 검색하시오.단 직원명단은 모든 직원 명단을 출력되어야 한다.
직원명단 ename
사수명단 ename
(+)사용
eno 사번
mgr 사수번호

별명을 통해 셀프조인 자기참조테이블

SELECT e2.ename 사원이름, e1.ename 사수이름 FROM emp e1, emp e2 WHERE e1.eno=e2.mgr ;
직원명단이 다 안나옴 (+)사용해야함

SELECT e2.eno,e2.ename 사원이름,e2.mgr, e1.ename 사수이름 
FROM emp e1, emp e2 WHERE e1.eno(+)=e2.mgr ;

2)교수의 정보와 교수가 담당하는 과목명을 검색하시오.
과목명: cname
교수정보: pno,pname,section, orders,hiredate

SELECT p.pno, pname, section, orders, hiredate, cname FROM professor p, course c WHERE p.pno=c.pno;
pno가 professor 와 course에 있기때문에 구분 할수 있도록 

SELECT p.pno, pname, section, orders, hiredate, cname FROM professor p, course c WHERE p.pno=c.pno(+);
담당하는 과목이 없는 교수도 출력 

--자연 조인(Natural Join)
--자연 조인은 동일한 타입과 이름을 가진 커럼을 
--조인조건으로 이요하는 조인문장을 보다
--간단히 표현하는 방법으로 등가조인이다.

--SELECT 컬럼,...
--FROM 테이블1
--NATURAL JOIN 테이블2
--WHERE 일반_조건;

SELECT eno, ename, dno, dname FROM emp NATURAL JOIN dept;
자연조인 적용예시

--광주에서 근무하는 직원의 명단을 검색하시오.
SELECT emp.dno, ename, loc FROM emp, dept WHERE emp.dno=dept.dno AND loc='광주';

자연조인 적용시
SELECT dno, ename, loc FROM emp NATURAL JOIN dept WHERE loc='광주';

--단일 행 함수 - 문자함수
--프로그래머는 복잡한 SQL문의 이해나
--오라클이 제공하는 함수를 몰라도 사용에는 문제가 없다.


--문자함수 
--LOWER 문자열을 소문자로 변환한다.
--UPPER 문자열을 대문자로 변환한다.
--INITCAP 첫문자만 대문자로 나머지는 소문자

--ERP부서가 있는 지역을 검색한다.
  SELECT loc "ERP 부서 지역"  FROM dept  WHERE LOWER(dname)='erp';

더미 테이블 사용(dual)
SELECT 'aaa' FROM dual;
SQL> SELECT UPPER('AAA') FROM dual;

UPPER(
------
AAA

SQL> SELECT UPPER('aaa') FROM dual;

UPPER(
------
AAA

SQL> SELECT INITCAP('aaa') FROM dual;

INITCA
------
Aaa

--문자연산함수
--SUBSTR 문자열내에 지정된 위치의 문자열을 반환
       SUBSTR('oracle',1,2)

SELECT SUBSTR('ORACLE',1,2) FROM dual;

SUBS
----
OR

--LENGTH 지정된 문자의 길이를 반환
     LENGTH('ORACLE')
 SELECT LENGTH('ORACEL') FROM DUAL;

LENGTH('ORACEL')
----------------
               6

SELECT LENGTH('홍길동') FROM DUAL;

LENGTH('홍길동')
----------------
               3

SQL> SELECT LENGTHB('홍길동') FROM DUAL;

LENGTHB('홍길동')
-----------------
                9	바이트단위로 세어줌 

SQL> SELECT LENGTHB('ORACLE') FROM DUAL;

LENGTHB('ORACLE')
-----------------
                6


--INSTR 지정된 문자의 위치를 리턴
      INSTR('ORACLE','A')
SELECT INSTR('ORACLE','A')FROM DUAL;

INSTR('ORACLE','A')
-------------------
                  3

--TRIM 접두어나 접미어를 잘라낸다.
     TRIM ('O'FROM'ORACLE')

SELECT TRIM('O'FROM'ORACLE') FROM DUAL;

TRIM('O'FR
----------
RACLE

SELECT TRIM('O'FROM'OORACLEOO') FROM DUAL;

TRIM('O'FR
----------
RACLE

-LPAD, RPAD 지정된 문자열의 길이만큼 빈부분에 문자를 채운다.
   UPAD('20000',10,'*')

SELECT LPAD('20000',10,'*') FROM DUAL;

LPAD('20000',10,'*')
--------------------
*****20000

SELECT RPAD('20000',10,'*') FROM DUAL;

RPAD('20000',10,'*')
--------------------
20000*****

--부서의 명과 위치를 하나의 컬럼으로 검색한다.
--CONCAT는 문자열을 연결해주는 함수
==||연산자와 같은 기능을 한다.

SELECT CONCAT(DNAME,LOC) FROM DEPT;

CONCAT(DNAME,LOC)
--------------------------------
총무서울
회계서울
ERP서울
ISP부산
ITEA광주
CRM대전
POS

7 rows selected.


SELECT DNAME||LOC FROM DEPT;

DNAME||LOC
--------------------------------
총무서울
회계서울
ERP서울
ISP부산
ITEA광주
CRM대전
POS

7 rows selected.

--부서명과 길이를 출력하세요.

SELECT dname,LENGTH(dname)FROM dept;

DNAME      LENGTH(DNAME)
---------- -------------
총무                   2
회계                   2
ERP                    3
ISP                    3
ITEA                   4
CRM                    3
POS                    3

7 rows selected.

--SUBSTR 함수를 이용해서 컬럼의 일부내용만을 검색한다.

-입력시 뒤에서 부터 시작
SELECT ename, SUBSTR(ename,-3,2) FROM emp;

ENAME      SUBSTR(ENAME,-3,
---------- ----------------
안영희     안영
안영숙     안영
손하늘     손하
이승철     이승
박선경     박선
제갈민     제갈
정의찬     정의
이초록     이초
윤고은     윤고
권아현     권아
김선유     김선
김선유     김선
김민지     김민
권나현     권나
김진성     김진
천유정     천유
김경현     김경

17 rows selected.

-- 사원 이름에 'a'가 나타나는 위치를 출력해보자
   --INSTR('database','a')
   --INSTR('database','a',i)  --i위치에서 부터 시작
   --INSTR('database','a'i,j) --i위치에서 부터 j번째 a를 찾아라

SELECT INSTR('database','a',3,2) FROM DUAL;

INSTR('DATABASE','A',3,2)
-------------------------
                        6

--TRIM 함수를 이용한 다양한 방법으로 문자열 검색

SELECT TRIM('남' FROM '남기남') 트림 FROM DUAL;

TRIM('
------
기
SELECT TRIM(leading '남' FROM '남기남')트림 FROM DUAL; - 앞쪽 '남'만 자르기

트림
------------
기남

SELECT TRIM(trailing '남' FROM '남기남')트림 FROM DUAL; -뒤쪽 '남' 만 자르기

트림
------------
남기


--이름과 급여를 각각 10컬럼으로 검색하시오.
SELECT RPAD(ename,10,'*'),LPAD(sal,10,'*')FROM emp;

SELECT RPAD(ename,10,'*')one ,LPAD(sal,10,'*')two FROM emp;

SQL> col one for a15
SQL> col two for a15

ONE             TWO
--------------- ---------------
안영희****      ******4800
안영숙****      ******3900
손하늘****      ******3510
이승철****      ******3400
박선경****      ******3300
제갈민****      ******1520
정의찬****      ******4350
이초록****      ******1989
윤고은****      ******2100
권아현****      ******2900
김선유****      *******900
김선유****      ******3200
김민지****      ******1100
권나현****      ******2600
김진성****      ******3200
천유정****      ******2900
김경현****      ******4000

17 rows selected.


SELECT RPAD(ename,10,' ')one ,LPAD(sal,10,' ')two FROM emp;

ONE             TWO
--------------- ---------------
안영희                4800
안영숙                3900
손하늘                3510
이승철                3400
박선경                3300
제갈민                1520
정의찬                4350
이초록                1989
윤고은                2100
권아현                2900
김선유                 900
김선유                3200
김민지                1100
권나현                2600
김진성                3200
천유정                2900
김경현                4000

17 rows selected.

--부서명의 마지막 글자를 제외하고 검색하시오.
SELECT dname, SUBSTR(dname,1,LENGTH(dname)-1) dname FROM dept;

--문자치환함수
--TRANSLATE: 문자단위 치환된 값을 리턴한다.
	     TRANSLATE('oracle','o','#')=>#racle

SQL> SELECT TRANSLATE('oracle','o','#') ONE FROM DUAL;

ONE
---------------
#racle

SELECT TRANSLATE('oracle','oa','#?') ONE FROM DUAL;

ONE
---------------
#r?cle

--REPLACE: 문자열 단위 치환된 값을 리턴한다.
	     REPLACE('oracle','or','##')=>##acle

SQL> SELECT REPLACE('oracle','oa','##') ONE FROM DUAL;

ONE
---------------
oracle

SQL> SELECT REPLACE('oracle','o','##') ONE FROM DUAL;

ONE
---------------
##racle

SQL> SELECT REPLACE('oracle','ora','##') ONE FROM DUAL;

ONE
---------------
##cle

 SELECT TRANSLATE('World of warcraft','wo','--') ONE,
  2         REPLACE('World of warcraft','wo','--') TWO FROM dual;

ONE                  TWO
-------------------- --------------------
W-rld -f -arcraft    World of warcraft
대소문자 구분

(모두 단일 행 함수 이용)
1)이름이 두글자인 학생의 이름을 검색하시오.

SELECT sname FROM student WHERE sname LIKE '__';
SELECT sname FROM student WHERE LENGTH(sname)=2;

2)'강'씨 성을 가진 학생의 이름을 검색하시오

SELECT sname FROM student WHERE SUBSTR(sname, 1,1)='강';

SNAME
----------
강은혜
강태용
강아영

SQL> SELECT SUBSTR(sname,2) FROM student WHERE SUBSTR(sname, 1,1)='강';

SUBSTR(SNAME,2)
------------------------------------------------------------------------
은혜
태용
아영

3)교수의 지위를 한글자로 검색하시오(조교수->조)
SELECT pname, SUBSTR(orders,1,1) FROM professor;

4)일반 과목을 기초 과목으로 변경해서 모든 과목을 검색하시오.
(ex 일반화학->기초화학)
SELECT cname,REPLACE(cname,'일반','기초') one FROM course WHERE cname LIKE '일반%';

5)직원의 연봉을 10자리로 검색하시오. 단 공백은 임의의 채움문자로 채움

SELECT ename, LPAD(sal*12+NVL(comm,0),10,'*')TWO FROM emp;

ENAME      TWO
---------- --------------------
안영희     *****57600
안영숙     *****49000
손하늘     *****43100
이승철     *****40800
박선경     *****39600
제갈민     *****20240
정의찬     *****52200
이초록     *****26168
윤고은     *****25200
권아현     *****34800
김선유     *****10890
김선유     *****38700
김민지     *****13260
권나현     *****33100
김진성     *****39400
천유정     *****35400
김경현     *****50500

17 rows selected.

6)학생의 이름을 검색하시오.(단 성이'심'인 학생은 성을 '사마'로 바꾸어 검색)
SELECT REPLACE(sname,'심','사마') FROM student WHERE sname LIKE '심%';

SELECT sname,REPLACE(sname,'심','사마') two FROM student ;
전체학생이름중 심->사마변경후 전체검색

--서브 쿼리 - 단행 행 서브쿼리
--서브 쿼리는 두개의 쿼리를 결합하여 하나의 문장으로 
--표현하는 것이다.
--1)단일 행 서브쿼리 
     서브쿼리가 하나의 컬럼에서 하나의 행을 검색한다.
--2)다중 행 서브쿼리
-- 서브쿼리가 하나의 컬럼에서 여러개의 행을 검색한다.
--3)다중 열 서브쿼리
    서브쿼리가 여러개의 컬럼을 검색한다.
  4)서브 쿼리는 WHERE 절, HAVING 절과 같이 조건절에 주로 쓰인다.
    FROM절에 쓰이는 경우도 있다.
    FROM절에 서브쿼리를 쓰는 경우를 인라인 뷰(INLINE VIEW)라고 한다.
--SELECT 컬럼,...
--FROM 테이블
--WHERE 컬럼<단일 행 연산자>(SELECT 문:Sub Query);
--1) 단일 행 연산자가 사용됨으로 반드시 서브 쿼리의 결과값은 1개만 
      검색되어야 한다.
--2) 서브 쿼리는 반드시 괄호로 묶는다.
--3) 서브 쿼리는 메인 쿼리실행 전에 실행된다.
--4) 서브 쿼리의 검색된 결과값은 메인 쿼리에 사용된다.
--5) 단일 행 연산자 오른쪽에 기술한다.
     (=,<,>,<=,>=,!=)
--6)WHERE 절에 기술된 열의 숫자와 타입은 SELECT 절과 
     1:1 대응관계가 되어야 한다.
--안영숙 보다 급여를 많이 받는 사원을 검색하시오.

SELECT ename , sal FROM emp WHERE sal>
  2  (SELECT sal FROM emp WHERE ename='안영숙');

ENAME             SAL
---------- ----------
안영희           4800
정의찬           4350
김경현           4000

--천유정보다 급여를 많이 받는 사원을 검색하시오.
SELECT ename , sal FROM emp WHERE sal>
  2  (SELECT sal FROM emp WHERE ename='천유정');

ENAME             SAL
---------- ----------
안영희           4800
안영숙           3900
손하늘           3510
이승철           3400
박선경           3300
정의찬           4350
김선유           3200
김진성           3200
김경현           4000

9 rows selected.


--김선유보다 급여를 많이 받는 사원을 검색하시오.
김선유가 2명이라서 안됨. 
행의 값이 두개여서 에러발생 검색이 될수 없다.

--정의찬과 부서가 다르고 동일한 업무를 하는 사원의 정보를 검색하시오.
  WHERE ??? AND ###

SELECT eno 사번, ename 이름,dno 부서번호, job 업무  FROM emp
  WHERE dno!=(SELECT dno FROM emp WHERE ename='정의찬')
 AND job = (SELECT job FROM emp WHERE ename='정의찬');

사번     이름                 부서번호 업무
-------- -------------------- -------- ----------------
2002     제갈민               20       개발
2008     윤고은               40       개발
-------------------------------------------------------------------------------------
--부산에서 근무하는 사원의 ㅣ정보를 검색하시오.

SELECT eno 사번, ename 이름, emp.dno 부서번호 FROM emp, dept
   WHERE  emp.dno=dept.dno AND loc='부산';

SELECT eno 사번, ename 이름, dno 부서번호 FROM emp
  2  WHERE dno = (SELECT dno FROM dept WHERE loc ='부산');

사번     이름                 부서번호
-------- -------------------- --------
2002     제갈민               20
3002     권아현               20
0120     김경현               20

1)김혁윤 보다 평점이 우수한 학생의 학번과 이름을 검색하시오.
김형윤 avr<avr
 SELECT sno 학번, sname 이름, avr 평점  FROM student
  WHERE avr>(SELECT avr FROM student WHERE sname='김혁윤');

2)권현과 동일한 학년 학생 중에 평점이 강은혜와 동일한 학생을 검색하시오.
권현 syear =syear
avr= 강은혜 avr
SELECT sno 학번 ,sname 이름, syear 학년,avr 평점 FROM student
 WHERE syear = (SELECT syear FROM student WHERE sname='권현')
 AND avr = (SELECT avr FROM student WHERE sname='강은혜');

3)이학수학 과목과 동일한 학점수인 과목을 검색하시오
st_num= 이학수학st_num

SELECT cname 과목, st_num 학점수 FROM course
 WHERE st_num = (SELECT st_num FROM course WHERE cname='이학수학');

4)타 학과에 송강 교수와 동일한 지위의 교수명단을 검색하시오.
타학과
송강 orders= orders

SELECT pname 이름, orders 지위,section 학과  FROM professor
  2  WHERE section !=(SELECT section FROM professor WHERE pname='송강')
  3  AND orders = (SELECT orders FROM professor WHERE pname ='송강');

5)제갈민보다 나중에 부임한 교수의 명단을 검색하세요.
제갈민 부임날짜
SELECT pname FROM professor WHERE hiredate>(SELECT hdate FROM emp WHERE ename='제갈민');

6)강태용보다 일반 화학 점수가 더 낮은 학생의 명단을 학점과 검색하시오.
강태용 일반화학 점수
score course 강태용->과목명-> 과목번호-> 일반화학점수 

SELECT s.sno, sname, cname, grade
  FROM student s, course c, score r, scgrade g
  WHERE s.sno=r.sno AND r.cno=c.cno AND result BETWEEN loscore AND hiscore
  AND cname = '일반화학'
  AND grade < ( SELECT grade
                FROM student s, course c, score r, scgrade g
		WHERE s.sno=r.sno AND r.cno=c.cno
		AND result BETWEEN loscore AND hiscore
		AND sname = '강태용'
		AND cname = '일반화학');

--서브 쿼리- 다중행, 다중열
-- SELECT 컬럼,...
-- FROM 테이블
-- WHERE 컬럼<다중 행 연산자>(SELECT 문:Sub Query 문);

--1) 서브 쿼리에 여러 개의 행의 검색되는 쿼리를 다중 행 
     서브 쿼리라고 한다.
--2) 다중 행 서브 쿼리는 다중행 연산자를 이용한다.
--3) 다중 행 연산자의 종류
      IN: 검색된 값중에 하나만 일치하면 참이다.
      ANY:검색된 값중에 조건에 맞는 것이 하나 이상
	있으면 참이다.
      ALL: 모든 검색된 값과 조건에 맞아야 참이다.

--20번 부서원들과 동일한 관리자로부터 관리 받는 사원을 검색한다.
--1)20번 부서원들의 관리자가 여러 명일 수 있다.
--2)서브 쿼리의 결과가 몇 개일지 예측할 수 없는 경우 
    다중 행 연산자를 이용하여 다중 행 서브쿼리를 작성한다.
 
 SELECT dno, eno, ename, mgr FROM emp WHERE mgr IN(SELECT mgr FROM emp WHERE dno='20')
   AND dno!='20';































































































































































































































