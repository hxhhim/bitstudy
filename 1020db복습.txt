프로젝트전 db 복습

시스템계정 생성
SYSTEM

호스트이름-외부일경우 아이피주소

아이디 MYSTUDY
패스워드 MYSTUDYPW

-- USER SQL
CREATE USER "MYSTUDY" IDENTIFIED BY "MYSTUDYPW"  
DEFAULT TABLESPACE "USERS"
TEMPORARY TABLESPACE "TEMP";

-- QUOTAS

-- ROLES
GRANT "CONNECT" TO "MYSTUDY" ;
GRANT "RESOURCE" TO "MYSTUDY" ;

-- SYSTEM PRIVILEGES
GRANT CREATE VIEW TO "MYSTUDY" ;

-- USER SQL
ALTER USER "HR" IDENTIFIED BY "hrpw" 
DEFAULT TABLESPACE "USERS"
TEMPORARY TABLESPACE "TEMP"
ACCOUNT UNLOCK ;

-- QUOTAS
ALTER USER "HR" QUOTA UNLIMITED ON "USERS";

-- ROLES
ALTER USER "HR" DEFAULT ROLE "CONNECT","RESOURCE";

-- SYSTEM PRIVILEGES

오라클은 컬럼명 대소문자 구분 안함

테이블 더블클릭하면 상세정보 확인

데이터 우측정렬 문자열은 좌측정렬


보기-모델러-브라우저

관계형모델

Relational 마우스우클릭으로 땡겨넣음


\\192.168.0.200\MyStudy_write

1.
EMPLOYEES 급여 7000~10000 이외

사원 이름 성(Name으로 별칭) 급여적은순서

6. 부서별 급여합계,급여평균, 최고급여, 최저급여
출력값은 6자리 세자리 구분기호 $앞에
부서아이디 NULL 제외

7. JOB_ID 급여평균 10000 큰 경우 출력
LIKE CLERK 제외

8. 
Employees, Departments, Locations
근무지-oxford
 사원이름, 성(별칭name),업무, 부서이름, 도시이름

9.사원수 5명 이상
부서이름 , 사원수 
사원수 많은 순으로 정렬

 ***** HR DB 데이터 조회 실습 *****************
■1 HR 부서에서 예산 편성 문제로 급여 정보 보고서를 작성하려고 한다. 
  사원정보(Employees) 테이블에서 급여가 $7,000~$10,000 범위 이외인 사람의 
  이름과 성(Name으로 별칭) 및 급여를 급여가 적은 순서로 출력하시오
  SELECT first_name,last_name as name, salary FROM EMPLOYEES where salary<7000 or salary>10000 order by salary asc;

■2 HR 부서에서는 급여(salary)와 수당율(commission_pct)에 대한 지출 보고서를 작성하려고 한다. 
  수당을 받는 모든 사원의 이름과 성(Name으로 별칭), 급여, 업무, 수당율을 출력하시오. 
  이때 급여가 큰 순서대로 정렬하되, 급여가 같으면 수당율이 큰 순서대로 정렬하시오
SELECT first_name,last_name as name, salary, job_id,commission_pct  FROM EMPLOYEES order by salary desc,commission_pct desc;
  
■3 이번 분기에 60번 IT 부서에서는 신규 프로그램을 개발하고 보급하여 회사에 공헌하였다. 
  이에 해당 부서의 사원 급여를 12.3% 인상하기로 하였다. 
  60번 IT 부서 사원의 급여를 12.3% 인상하여 정수만(반올림) 표시하는 보고서를 작성하시오. 
  보고서는 사원번호, 성과 이름(Name으로 별칭), 급여, 인상된 급여(Increase Salary로 별칭)순으로 출력하시오
  SELECT EMPLOYEE_ID, first_name,last_name as name,salary,round(salary*1.123) as IncreaseSalary 
  FROM EMPLOYEES where department_id=60 order by IncreaseSalary desc; 

■4 각 사원의 성(last_name)이 's'로 끝나는 사원의 이름과 업무를 아래의 예와 같이 출력하고자 한다. 
  출력 시 이름(first_name)과 성(last_name)은 첫 글자가 대문자, 업무는 모두 대문자로 출력하고 
  머리글(조회컬럼명)은 Employee JOBs.로 표시하시오
  예) FIRST_NAME  LAST_NAME  Employee JOBs.
      Shelley     Higgins    AC_MGR
  SELECT INITCAP(first_name),INITCAP(last_name),UPPER(job_id)as Employee_JOBs FROM employees where last_name LIKE '%s';


■5 모든 사원의 연봉을 표시하는 보고서를 작성하려고 한다. 
  보고서에 사원의 이름과 성(Name으로 별칭), 급여, 수당여부에 따른 연봉을 포함하여 출력하시오. 
  수당여부는 수당이 있으면 "Salary + Commission", 수당이 없으면 "Salary only"라고 표시하고, 
  별칭은 적절히 붙이시오. 또한 출력 시 연봉이 높은 순으로 정렬하시오
  SELECT first_name,last_name as name, salary ,salary*12*(nvl(commission_pct,0)+1) as 연봉  
  , CASE WHEN commission_pct>0  THEN 'Salary+Commission' ELSE 'Salaryonly' END AS COMMISSION
  FROM EMPLOYEES order by 연봉 desc;

  
■6 각 사원이 소속된 부서별로 급여 합계, 급여 평균, 급여 최댓값, 급여 최솟값을 집계하고자 한다. 
  계산된 출력값은 여섯 자리와 세 자리 구분기호, $표시와 함께 출력($123,456) 
  단, 부서에 소속되지 않은 사원에 대한 정보는 제외하고, 출력 시 머리글은 별칭(alias) 처리하시오
    SELECT department_id AS 부서명,SUM(SALARY) AS 급여합계,TO_CHAR(ROUND(AVG(SALARY)),'$999,999')AS 평균급여,MAX(SALARY)AS 최고급여
    ,MIN(SALARY) AS 최저급여 FROM EMPLOYEES WHERE department_id IS NOT NULL GROUP BY department_id;

■7 사원들의 업무별 전체 급여 평균이 $10,000보다 큰 경우를 조회하여 업무별 급여 평균을 출력하시오. 
  단 업무에 CLERK이 포함된 경우는 제외하고 전체 급여 평균이 높은 순서대로 출력하시오

SELECT JOB_ID,AVG(salary)as AVGSAL FROM EMPLOYEES GROUP BY JOB_ID HAVING AVG(salary) > 10000 
AND JOB_ID NOT LIKE '%CLERK'
ORDER BY AVGSAL DESC ;

■8 HR 스키마에 존재하는 Employees, Departments, Locations 테이블의 구조를 파악한 후 
  Oxford에 근무하는 사원의 이름과 성(Name으로 별칭), 업무, 부서이름, 도시이름을 출력하시오. 
  이때 첫 번째 열은 회사이름인 'HR-Company'이라는 상수값이 출력되도록 하시오

SELECT  'HR-Company',first_name,last_name as Name,job_id,Department_name,city
FROM Employees, Departments, Locations 
WHERE EMPLOYEES.DEPARTMENT_ID=DEPARTMENTS.DEPARTMENT_ID AND DEPARTMENTS.LOCATION_ID=LOCATIONS.LOCATION_ID and city = 'Oxford';



■9 HR 스키마에 있는 Employees, Departments 테이블의 구조를 파악한 후 사원수가 다섯 명 이상인 
  부서의 부서이름과 사원 수를 출력하시오. 이때 사원 수가 많은 순으로 정렬하시오

SELECT department_name,count(department_name) as did
FROM Employees E, Departments D
WHERE E.DEPARTMENT_ID=D.DEPARTMENT_ID  group by department_name having count(department_name)>= 5 ORDER BY did DESC;

select department_name as "부서이름", count(department_name) as"사원수" from employees e, departments d where e.department_id=d.department_id
group by department_name  having count(department_name)>=5 ;

SELECT Department_name, count(Department_name) ABC
FROM Departments GROUP BY Department_NAME
ORDER BY ABC DESC;



■10 각 사원의 급여에 따른 급여 등급을 보고하려고 한다. 
  급여 등급은 Job_Grades 테이블에 표시된다. 해당 테이블의 구조를 살펴본 후 
  사원의 이름과 성(Name으로 별칭), 업무, 부서이름, 입사일, 급여, 급여등급을 출력하시오.
  
SELECT first_name, last_name as Name, job_id,department_name,hire_date,salary ,grade_level
from employees e, departments d, job_grades
where e.department_id = d.department_id and salary>=lowest_sal and salary<= highest_sal;

select last_name||''||first_name as "name", e.job_id, department_name,hire_date ,grade_level 
from employees e, departments d, job_grades g where e.department_id=d.department_id and salary between lowest_sal and highest_sal;
  
  
SELECT * FROM Job_Grades;  
  
CREATE TABLE JOB_GRADES (
    GRADE_LEVEL VARCHAR2(3),
    LOWEST_SAL NUMBER,
    HIGHEST_SAL NUMBER
);
INSERT INTO JOB_GRADES VALUES ('A', 1000, 2999);
INSERT INTO JOB_GRADES VALUES ('B', 3000, 5999);
INSERT INTO JOB_GRADES VALUES ('C', 6000, 9999);
INSERT INTO JOB_GRADES VALUES ('D', 10000, 14999);
INSERT INTO JOB_GRADES VALUES ('E', 15000, 24999);
INSERT INTO JOB_GRADES VALUES ('F', 25000, 40000);
COMMIT;


























