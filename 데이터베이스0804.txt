@D:\sample\login.sql 출력너비 조정

--WHERE 절을 이용한 조건 검색
SELECT 컬럼,컬럼,...
FROM 테이블
WHERE 조건
ORDER BY 컬럼;
1)조건 사용되는 연산자
  =(같다),<,>,<=,>=,!=(같지않다.)

-- 사원중에 급여가 3000이상인 사원의 명단
SELECT ename 이름, sal 급여 FROM emp WHERE sal>=3000;

--10번부서를 제외한 사원의 명단
SELECT * FROM emp WHERE dno!='10';
검색조건에 타입 맞추는것이 속도가 더 빠르다

SELECT ename 이름, dno 부서번호  FROM emp WHERE dno!='10' ORDER BY dno ;

SQL> SELECT ename 이름, dno 부서번호  FROM emp WHERE dno!='10' ORDER BY dno DESC;

--dno의 자료형이 VARCHAR2 이다.
--10을 비교하며 10은 정수 자료형이다.
--이럴때 모든 행의 데이터를 검색할 때마다
--dno를 정수 자료형으로 자동 변환한다. 비교하기 위해서
--결과는 별 문제는 없지만 
--기업환경의 테이블은 수천만 이상의 행이 보통이므로
--위처럼 검색하면 엄청나게 속도 저하가 일어난다.

--연봉이 30,000이상인 사원의 이름을 검색하시오
SQL> SELECT ename 이름, sal*12+NVL(comm,0) 연봉 FROM emp 
WHERE sal*12+NVL(comm,0)>30000 ORDER BY 연봉 DESC;

--보너스가 200이하인 사원을 검색하라
SQL> SELECT ename 이름, comm 보너스 FROM emp WHERE comm<=200 ORDER BY comm DESC;

--입사일이 1996년 이후의 사원의 정보를 검색하라.
SQL> SELECT ename 사원, hdate 입사일 FROM emp WHERE hdate>'1995/12/31' ORDER BY hdate DESC;

날짜 출력 양식변경
SQL> ALTER SESSION SET
  2  nls_date_format='YY/MM/DD';

--보너스 컬럼이 NULL 값인 사원을 검색하시오.
--=,< : NULL값일때 사용불가.
-- IS NULL :NULL값인가
-- IS NOT NULL: NULL값이 아닌가

SQL> SELECT * FROM emp WHERE comm IS NULL;

SQL> SELECT * FROM emp WHERE comm IS NOT NULL;

1)화학과 학생을 검색하시오
SQL> SELECT sname 이름, major 과명 FROM student WHERE major='화학' ORDER BY sname;

2)물리과 학생을 검색하시오
SQL> SELECT sname 이름, major 과명 FROM student WHERE major='물리' ORDER BY sname;

3)평점이 2.0 미만인 학생을 검색하시오
SQL> SELECT sname 이름, avr 평점 FROM student WHERE avr<2.0 ORDER BY avr;

4)권현 학생의 평점을 검색하시오
SQL> SELECT sname 이름, avr 평점 FROM student WHERE sname = '권현';

5)정교수의 명단을 검색하시오.
SQL> SELECT pname 이름 , orders 직위 FROM professor WHERE orders='정교수' ORDER BY pname ;

6)화학과 소속교수의 명단을 검색하시오.
SQL> SELECT pname 이름, section 과목 FROM professor WHERE section= '화학' ORDER BY pname;

7)송강 교수의 정보를 검색하시오.
SQL> SELECT * FROM professor WHERE pname= '송강' ;

8)학년별로 화학과 학생의 성적을 검색하시오
SQL> SELECT sname 이름, major 학과, avr 성적, syear 학년 FROM student 
WHERE major='화학' ORDER BY syear;

9)2000년 이전에 부임한 교수의 정보를 부임일순으로 검색하시오.
SQL> SELECT * FROM professor WHERE hiredate<'2000/1/1' ORDER BY hiredate;

10)담당 교수가 없는 과목의 정보를 검색하시오.
SELECT * FROM course WHERE pno is null;

11)보너스가 급여의 10%이상인 사원을 검색하시오.
SQL> SELECT ename 이름, sal 급여, comm 보너스 FROM emp WHERE sal*0.1<NVL(comm,0) ORDER BY sal;

--관계 연산자와 LIKE 연산자
--SELECT 컬럼,...
--FROM 테이블
--WHERE 조건 [ 관계연산자 조건...]
--1)여러개의 조건을 동시에 사용할 때
--2)AND,OR,NOT 이 사용
--3)연산자 우선순위를 피하기 위해
-- 2개 이상의 관계 연산자를 사용할 때는 ()를 사용

--20번 부서사원중에 급여가 2000이상인 사원을 검색하시오.
SQL> SELECT * FROM emp WHERE dno='20' and sal>2000;

--지원업무를 담당하는 사원을 검색하시오.
SQL> SELECT * FROM emp WHERE job='지원' and sal>=2000;

--연산자의 우선 순위 not>and>or

SQL> SELECT * FROM emp WHERE dno='10' or sal>1600 and comm>600;

SQL> SELECT * FROM emp WHERE (dno='10' or sal>1600) and comm>600;

--LIKE 연산자
--
--SELECT 컬럼, ...
--FROM 테이블
--WHERE 컬럼 LIKE '비교 문자열';
--1) 문자열의 일부 검색시
--2) 문자열에서 패턴을 찾아주는 연산자
--3)'_'; 1개의 문자 대체
--4)'%':문자열을 대체

--김씨성을 가진 사원을 검색하시오.
SELECT * FROM emp WHERE ename LIKE '김%';

--이름이 '하늘'인 사원을 검색하시요.
SQL> SELECT * FROM emp WHERE ename LIKE '%하늘';

--LIKE 연산자 사용시 
--'경%' ; '경'으로 시작하는 모든 문자열.
	경,경제,경금속,경영학고,....

--'%과': '과'로 끝나는 모든 문자열
	과,다과, 화학과,물리학과....

--'%김%' - '김'이란 글자가 들어간 모든 문자열 
	김,김씨,돌김,되새김질......

--'화_' : '화'로 시작하는 두글자 단어.
	화학,화약,화살

--'__화'; '화'로 끝나는 세글자 단어
	무궁화,해당화,운동화

1)유공과 와 생물과, 식영과 학생을 겁색하시오
SELECT sname 이름 , major 학과  FROM student 
WHERE major='유공'or major='생물'or major='식영' ORDER BY major ;

2)화학과가 아닌 학생중에 1학년 학생을 검색하시오.
SQL> SELECT sname 이름,major 학과, syear 학년 FROM student 
WHERE major!='화학' and syear ='1'ORDER BY major;

3)화학과 3학년 학생을 검색하시오.
SELECT sname 이름,major 학과, syear 학년 FROM student WHERE major='화학' and syear ='3';

4)평점이 2.0에서 3.0사이인 학생을 검색하시오
SELECT * FROM student WHERE avr>=2.0 and avr<=3.0 ORDER BY major;

5)화학 관련된 과목중 평점이 2학점 이하인 과목을 검색하시오.
(화학 관련 과목은 과목명에 화학이 들어간 과목을 의미한다.)
SQL> SELECT * FROM course WHERE st_num<=2.0 and  cname LIKE '%화학%';

6)화학과 정교수를 검색하시오
SELECT  pname ,section,orders FROM professor WHERE section='화학'and orders='정교수';

7)화학과 학생 중에 성이 권씨인 학생을 검색하시오.
SELECT sname FROM student s WHERE major='화학'AND sname LIKE '권%';

8)부임일이 1995년 이전인 정교수를 검색하시오.
SELECT pname, hiredate FROM professor WHERE hiredate<'1995/01/01'AND orders='정교수';

9)성과 이름이 각각 한글자인 교수를 검색하시오.


--BETWEEN 과 IN 연산자
--
--SELECT 컬럼
--FROM 테이블
--WHERE 컬럼 BETWEEN 값1 AND 값2;

--1) 컬럼>=값1 AND 컬럼<=값2와 동일하다.
--2) 컬럼의 값이 값1에서 값2사이의 값을 검색한다.
--3) 값1은 반드시 값2보다 작아야 한다.

--급여가 1000이상 2000이하인 사원
SELECT *
FROM emp
WHERE sal>=1000 AND sal<=2000;

SELECT * FROM emp WHERE sal BETWEEN 1000 AND 2000;

--10번, 20번 부서 사원
SELECT * FROM emp WHERE dno='10' OR dno='20';

--1992년에서 1996년 사이에 입사한 사원을 검색하라
SELECT * FROM emp WHERE hdate BETWEEN '1992/01/01' AND '1996/12/31' ORDER BY hdate;

--DATE 타임은 화면에 보여질때는 defalut로 
--'년/월/일'만 표시되지만
--내부적으로는 '년/월/일/시:분:초'를 포함한다.
--조건문에 시:분:초를 지정하지 않으면 
--기본 값은 0시 0분 0초인'00:00:00'이 된다.

ALTER SESSION SET
nls_date_format='YYYY/MM/DD:HH24:MI:SS';

--IN 연산자
--
--SELECT 컬럼,....
--FROM 테이블
--WHERE 컬럼 IN(값1,값2,...);
--1) 지정한 값중에 일치하면 검색
--2) OR 연산자와 = 연산자로 교환 가능하다.
--3) 가독석이 우수하다.

--개발이나 지원업무를 담당하는 사원
SELECT *FROM emp WHERE job='개발' OR job='지원';

SELECT *FROM emp WHERE job IN('개발','지원');

1)평점이 3.0에서 4.0사이의 학생을 검색하시오.
SELECT * FROM student WHERE avr BETWEEN '3.0' AND '4.0' ORDER BY syear;

2) 1999년에서 2001년까지 부임한 교수의 명단을 검색하시오
SELECT * FROM professor WHERE hiredate BETWEEN '1999/01/01' AND '2001/12/31';

3)화학과와 물리학과, 생물학과 학생을 검색하시오.
SELECT * FROM student WHERE major IN ('화학','물리','생물') ORDER BY syear;

4)정교수와 조교수를 검색하시오.
SELECT * FROM professor WHERE orders IN('정교수','조교수');

5)학점수가 1학점,2학점 과목을 검색하시오.

6)1,2학년 중에 평점이 2.0에서 3.0사이인 학생을 검색하시오.
7)화학,물리학과 학생중 1,2학년 학생을 성적순으로 검색하시오.
8)물리, 화학과 학생중 4.5화산평점이 3.5에서 4.0사이인 학생을 검색하시오.
9)물리, 화학과 학생의 정보를 학년별 성적순으로 검색하시오
10)물리, 화학과 교수 중에 1999년에서 2000년 사이에 부임한 교수의 정보를 직위별로 검색하시오.


--RDB(Relational Database)
--테이블과 테이블은 관계를 가지고 있다.
--업무-업무 관련성

--SELECT 테이블 1.컬럼,...테이블2.컬럼...
--FROM 테이블1,테이블2,...
--WHERE 조인_조건
--AND 일반_조건;

--10번부서의 사원정보와 부서정보를 검색하시오.
SELECT * FROM emp,dept WHERE emp.dno=dept.dno AND emp.dno='10';

--각 사원의 근무 부서를 검색해보자.
--각 부서정보 검색
--공통 컬럼을 조인 조건으로 기술한다.
SELECT emp.ename, dept.dname FROM emp,dept WHERE emp.dno=dept.dno; (등가조인)

--광주에서 근무하는 직원의 명단을 검색하시오.
SELECT * FROM emp,dept WHERE emp.dno=dept.dno AND dept.loc='광주';

--각 직원의 급여를 10% 인상한경우 급여 등급을 검색하시오.
SELECT eno, ename , sal*1.1 "10%인상급여" ,grade FROM emp,salgrade WHERE sal*1.1 BETWEEN losal AND hisal;
(비등가 조인)

행수가 다를때 조인조건에 따라(급여별 등급) 행수에 맞게 데이터를 만들어서 붙여준다.
등급은 5행이지만 급여를 등급범위로 체크해서 등급을 메겨 17개의 데이터를 얻었다.

--=조인 등가조인
--부등호,BETWEEN문 ,비등가조인

1)이준 교수가 강의하는 과목을 검색하시오.
SELECT pname,cname FROM professor,course WHERE professor.pno=course.pno AND pname='이준';

2)화학 관련 과목을 강의하는 교수의 명단을 검색하시오.
SELECT pname, cname FROM professor,course WHERE professor.pno=course.pno AND cname LIKE '%화학%';

3)학점이 2학점인 과목과 이를 강의하는 교수를 검색하시오
SELECT pname , cname,st_num FROM professor, course 
WHERE professor.pno=course.pno AND course.st_num='2';

4)화학과 교수가 강의하는 과목을 검색하시오.
SELECT pname, cname FROM professor,course 
WHERE professor.pno=course.pno AND professor.section='화학';

5)화학과 1학년 학생의 기말고사 성적을 검색하시오.
SELECT sname, result FROM student,score WHERE student.sno=score.sno AND student.major='화학';

6)일반화학 과목의 기말고사 점수를 검색하시오.
1212
SELECT cname, result FROM course,score WHERE course.cno=score.cno AND course.cno='1212';
7)화학과 1학년 학생의 일반화학 기말고사 점수를 검색하시오.
SELECT sname, result FROM student,score 
WHERE student.sno=score.sno AND student.major='화학'and student.syear='1';

8)화학과 1학년 학생이 수강하는 과목을 검색하시오.
SELECT distinct c.cno,cname FROM student s,course c,score r WHERE s.sno=r.sno AND c.cno=r.cno
AND major='화학' AND syear=1;

9)유기화학 과목의 평가점수가 F인 학생의 명단을 검색하시오.
SELECT s.sno,sname,cname,result,grade FROM student s,course c, score r,scgrade g
    WHERE s.sno=r.sno AND c.cno=r.cno
    AND result BETWEEN loscore AND hiscore AND cname='유기화학' AND grade='F' ORDER BY result DESC;

10)이준교수의 과목을 수강하는 학생의 기말고사 점수를 성적 순서로 검색하시오.
SELECT s.sno,sname,pname,cname,result FROM student s, score r, course c, professor p
    WHERE s.sno=r.sno AND c.cno=r.cno AND p.pno=c.pno AND pname='이준' ORDER BY result;
                                                 result
|student| ----sno----|score| ------------hiscore ----|scgrade|
		   |                   loscore
		   | 
		 cno
		   |
		   |
	            |course|-------pno --------|professor| 	

--자기 참조 조인(Self Join)
--
--SELECT 컬럼,....
--FROM 테이블 별명1,테이블 별명2
--WHERE 조인_조건
--AND 일반_조건
--1)동일 테이블을 자기 참조에 의해 조인한다.
--2)별명1과 별명2는 같은 테이블의 다른 이름이다
-- 같은 테이블이지만 다른 이름을 부여함으로써
-- 서로 다른 테이블을 조인하는 효과를 부여한다.
--3)테이블에 반드시 별명을 붙여야 한다.
--(별명을 이용한 조인이라고 부르기도 한다.)
--각 사원을 관리하는 관리자(사수)의 이름을 검색한다.
--e1은 사원 테이블
--e2은 관리자 테이블
SELECT  e1.eno 사번, e1.ename 사원, e1.mgr 관리자사번, e2.eno 관리자사번, e2.ename 관리자
    from emp e1, emp e2 where e1.mgr=e2.eno;

--외부조인
--
--SELECT 테이블1.컬럼,... 테이블2.컬럼,...
--FROM 테이블1,테이블2,...
--WHERE 조인_조건(+)
--AND 일반조건; 
--1)조인 조건에 일치하지 않는 데이터를 출력해 준다.
--2)+기호는 데이터가 부족한 쪽에 기술한다.

--신규부서가 만들어져서 부서원이 없을때
--신입사원이 아직 부서배정을 받지 않았을때
--그냥 등가조인(=)을 하면 일부 누락되게 된다.
--이럴때 외부 조인을 하면 모두 출력된다.

--각 부서별로 사원을 검색한다.
SELECT  d.dno , dname, e.eno, ename FROM dept d, emp e WHERE d.dno=e.dno(+) ;

1)학생중에 동명이인을 검색하시오.
SELECT distinct s1.sno,s1.sname FROM student s1, student s2 WHERE s1.sno!=s2.sno and s1.sname=s2.sname ;

2)전체 교수명단과 교수가 담당하는 과목의 이름을 학과 순으로 검색하시오.
SELECT  pname, cname,section FROM professor p,course c WHERE p.pno=c.pno(+) ORDER BY section;

3)모든 과목과 담당 교수를 학점순으로 검색하시오.
SELECT  cname, pname,section,st_num FROM professor p,course c WHERE p.pno=c.pno ORDER BY st_num;







































































































	





















































